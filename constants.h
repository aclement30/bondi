#include <Arduino.h>

#ifndef CONSTANTS_H
#define CONSTANTS_H

enum PinConfig {
    // INPUTS
    SAFETY_SENSOR = 3,
    SD_CARD_CS = 46,
    RFID_RSA_PIN = 53,
    RFID_RST_PIN = 49,
    RTC_CE_PIN = 39,
    RTC_IO_PIN = 41,
    RTC_SCLK_PIN = 43,
    
    // OUTPUTS
    GREEN_FORWARD_LIGHT = 4,
    RED_LIGHT = 6,
    GREEN_BACKWARD_LIGHT = 5,
    SPEAKER = 45,

    // RAIL MOTOR
    MAIN_MOTOR_OUT1 = 8,
    MAIN_MOTOR_OUT2 = 9,

    // CONVEYOR MOTORS
    CONVEYOR_MOTOR_FRONT_PWM = 10,
    CONVEYOR_MOTOR_FRONT_REVERSE = 11,
    CONVEYOR_MOTOR_BACK_PWM = 12,
    CONVEYOR_MOTOR_BACK_REVERSE = 13,
};

enum MachineState {
    Off,
    MainMenu,
    Automatic,
    ManualMenu,
    ManualMealDistribution,
    ManualControl,
    History,
    Diagnostic
};

enum MovingDirection {
    MOVING_IDLE,
    MOVING_FORWARD,
    MOVING_BACKWARD
};

enum FeederState {
    FEEDER_IDLE,
    FEEDER_MOVING,
    FEEDER_REFILLING,
    FEEDER_SAFETY_STOP
};

enum ConveyorSide {
    CONVEYOR_IDLE,
    CONVEYOR_SIDE_LEFT,
    CONVEYOR_SIDE_RIGHT
};

enum LightColor {
    GREEN,
    RED,
    GREEN_BACKWARD
};

enum FeederEvent {
    STARTUP,
    MEAL_DISTRIBUTION_START,
    MEAL_DISTRIBUTION_END,
    MANUAL_MEAL_SELECTION,
    ROUTE_START,
    ROUTE_END,
    SAFETY_BAR_PRESSED,
    SAFETY_MODE_ENGAGED,
    SAFETY_MODE_RETRY,
    SAFETY_MODE_DISENGAGED,
    MANUAL_CONTROL_START,
    MANUAL_CONTROL_END,
    MANUAL_RESTART
};

enum ConfigurationError {
    CONFIG_VALID,
    CONFIG_NO_DOCK_POINT,
    CONFIG_DUPLICATE_RAIL_POINT_ID,
    CONFIG_DUPLICATE_RAIL_POINT_RFID_UID,
    CONFIG_DUPLICATE_MEAL_ID,
    CONFIG_INVALID_MEAL_START_MOMENT,
    CONFIG_DUPLICATE_MEAL_START_MOMENT,
    CONFIG_UNKNOWN_MEAL_ROUTE_ID,
    CONFIG_UNKNOWN_MEAL_START_POINT,
    CONFIG_UNKNOWN_MEAL_END_POIND
};

enum ConfirmationResponse {
    CONFIRMATION_ACKNOWLEDGED,
    CONFIRMATION_DENIED,
    CONFIRMATION_TIMEOUT
};

const int SAFETY_STOP_RETRY_DELAY = 5000;
const int SAFETY_STOP_RESET_INTERVAL = 10000;
const char PROGMEM FILE_MEAL_SEQUENCES[] = "MEAL_SEQ.CSV";
const char PROGMEM FILE_POINTS[] = "POINTS.CSV";
const char PROGMEM FILE_MEALS[] = "MEALS.CSV";
const char PROGMEM FILE_CONFIG_VERSION[] = "VERSION.CFG";
const char PROGMEM PATH_DISTRIB_LOGS[] = "LOGS/DISTRIB";
const char PROGMEM PATH_SYSTEM_LOGS[] = "LOGS/SYSTEM";

const char PROGMEM APP_VERSION[] = "0.0.1";

const unsigned long EDT_OFFSET = -4;
const unsigned long EST_OFFSET = -5;

const unsigned long TIMEZONE_OFFSETS[20][2] = {
    { 1520751600, EDT_OFFSET }, // 2018-03-11
    { 1541314800, EST_OFFSET }, // 2018-11-04
    { 1552201200, EDT_OFFSET }, // 2019-03-10
    { 1572764400, EST_OFFSET }, // 2019-11-03
    { 1583650800, EDT_OFFSET }, // 2020-03-08
    { 1604214000, EST_OFFSET }, // 2020-11-01
    { 1615705200, EDT_OFFSET }, // 2021-03-14
    { 1636268400, EST_OFFSET }, // 2021-11-07
    { 1647154800, EDT_OFFSET }, // 2022-03-13
    { 1667718000, EST_OFFSET }, // 2022-11-06
    { 1678604400, EDT_OFFSET }, // 2023-03-12
    { 1699167600, EST_OFFSET }, // 2023-03-12
    { 1710054000, EDT_OFFSET }, // 2024-03-10
    { 1730617200, EST_OFFSET }, // 2024-11-03
    { 1741503600, EDT_OFFSET }, // 2025-03-09
    { 1762066800, EST_OFFSET }, // 2025-11-02
    { 1772953200, EDT_OFFSET }, // 2026-03-08
    { 1793516400, EST_OFFSET }, // 2026-11-01
    { 1805007600, EDT_OFFSET }, // 2027-03-14
    { 1825570800, EST_OFFSET }, // 2027-11-07
};

#endif
